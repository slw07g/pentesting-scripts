# This script is useful if you  have low-privilege access on a device
# and you are enumerating the files on the host.
Param([string]$RootFolder="C:\",
          [string]$Username=$env:username,
          [string]$Domain=$env:userdomain
)
function Invoke-FindWritableFiles {

    Param([string]$RootFolder="C:\",
            [string]$Username=$env:username,
            [string]$Domain=$env:userdomain
    )
    $paths = Get-ChildItem -Path $RootFolder -Recurse -ErrorAction Ignore
    $ModifyRight = 197055
    $FullRight = 2032127
    $WriteRight = 278
    $WriteDataRight = 2
    $WriteRights = @($FullRight, $WriteRight, $WriteDataRight, $modifyRight)
    function user_in_group {
        param(
            [string]$user=$env:username,
            [string]$domain=$global:Domain,
            [string]$group
            )
        foreach ( $member in (get-localgroupmember -group $group -ErrorAction Ignore)) { 
            if ( "$($domain)\$($user)" -eq $member.name ) {
                return $true
            }
        }
        return $false 
    }


    foreach ($path in $paths) {
        $path=$path.FullName
        if ( ($env:username -eq $username) -and $path.StartsWith($env:userprofile, "CurrentCultureIgnoreCase")) { continue }
        foreach ($right in (Get-Acl $path).Access ) {
            if ($right.IdentityReference.ToString() -eq $null) {
                continue
            }
            #Write-Host $right.IdentityReference
            if ( 
                ($right.IdentityReference.toString() -eq $Username ) -or 
                ($right.IdentityReference.toString() -eq "$($Domain)\$($Username)" -or
                ( user_in_group -user $Username -group (split-path $right.IdentityReference.toString() -leaf) )
            )) {
                #Write-Host we are here
                foreach ($WriteRight in $WriteRights) {
                    if ( ( $WriteRight -band $right.FileSystemRights.value__) -eq $WriteRight ) { 
                        Write-Host "$($Username) can write to $($path)"
                        break
                    }
                }
            }
        }
    }
}
Invoke-FindWritableFiles -username $username -domain $domain -RootFolder $RootFolder
