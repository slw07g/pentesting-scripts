# This script is useful if you  have low-privilege access on a device
# and you are enumerating the files on the host.

Param([string]$RootFolder="C:\",
      [string]$Username=$env:username
)
$Folder = "C:\"
$User = $env:username
$paths = Get-ChildItem -Path $RootFolder -Recurse -ErrorAction Ignore
$ModifyRight = 197055
$FullRight = 2032127
$WriteRight = 278
$WriteDataRight = 2
$WriteRights = @($FullRight, $WriteRight, $WriteDataRight, $modifyRight)
function user_in_group {
    param(
        [string]$user=$env:username,
        [string]$group
        )
    foreach ( $member in (get-localgroupmember -group $group -ErrorAction Ignore)) { 
        if ( "$($env:computername)\$($user)" -eq $member.name ) {
            return $true
        }
    }
    return $false 
}

foreach ($path in $paths) {
    $path=$path.FullName
    if ($path.StartsWith($env:userprofile, "CurrentCultureIgnoreCase")) { continue }
    foreach ($right in (Get-Acl $path).Access ) {
        if ($right.IdentityReference.ToString() -eq $null) {
            continue
        }
        #Write-Host $right.IdentityReference
        if ( 
            ($right.IdentityReference.toString() -eq $user ) -or 
            ($right.IdentityReference.toString() -eq "$($env:userdomain)\$($env:username)" -or
            ( user_in_group -user $user -group (split-path $right.IdentityReference.toString() -leaf) )
        )) {
            #Write-Host we are here
            foreach ($WriteRight in $WriteRights) {
                if ( ( $WriteRight -band $right.FileSystemRights.value__) -eq $WriteRight ) { 
                    Write-Host "$($user) can write to $($path)"
                    break
                }
            }
        }
    }
}
