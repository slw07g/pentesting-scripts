# This script is useful if you  have low-privilege access on a device
# and you are enumerating the files on the host it's executed on.
Param([string]$RootKey="Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services",
      [string]$Username=$env:username,
      [string]$Domain=$env:userdomain
)

function Invoke-FindWritableKeys {
      Param([string]$RootKey="Registry::HKEY_LOCAL_MACHINE\",
            [string]$Username=$env:username,
            [string]$Domain=$env:userdomain
      )

      $regkey = $RootKey
      $paths = Get-ChildItem -Path $RootKey -Recurse -ErrorAction Ignore
      $PermissionRight = 262144
      $FullRight = 983103
      $SetRight = 2
      $WriteRight = 131078
      $WriteRights = @($FullRight, $SetRight, $PermissionRight, $WriteRight)
      function user_in_group {
          param(
              [string]$user=$env:username,
              [string]$domain=$Domain,
              [string]$group
              )
          foreach ( $member in (get-localgroupmember -group $group -ErrorAction Ignore)) { 
              if ( "$($Domain)\$($user)" -eq $member.name ) {
                  return $true
              }
          }
          return $false 
      }

      foreach ($path in $paths) {
          $path=$path.pspath
          if ($path.StartsWith($env:userprofile, "CurrentCultureIgnoreCase")) { continue }
          foreach ($right in (Get-Acl $path).Access ) {
              if ($right.IdentityReference.ToString() -eq $null) {
                  continue
              }
              if ( 
                  ($right.IdentityReference.toString() -eq $Username ) -or 
                  ($right.IdentityReference.toString() -eq "$($Domain)\$($Username)" -or
                  ( user_in_group -user $Username -group (split-path $right.IdentityReference.toString() -leaf) )
              )) {
                  #Write-Host we are here
                  foreach ($WriteRight in $WriteRights) {
                      if ( ( $WriteRight -band $right.RegistryRights.value__) -eq $WriteRight ) { 
                          Write-Host "$($Username) can write to $($path)"
                          break
                      }
                  }
              }
          }
      }
}

Invoke-FindWritableKeys -username $username -domain $domain -RootKey $rootkey
